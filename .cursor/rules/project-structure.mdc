---
alwaysApply: true
description: Project structure and architecture guide for Tauri Vue 3 Todo app
---

# Tauri Vue 3 Todo App - Project Structure

This is a cross-platform desktop todo application built with Tauri (Rust backend) and Vue 3 (TypeScript frontend).

## Core Architecture

- **Frontend**: Vue 3 + TypeScript + Element Plus + UnoCSS + Pinia
- **Backend**: Tauri (Rust) for file I/O and desktop integration
- **Package Manager**: pnpm
- **Build Tool**: Vite

## Key Files

- [src/main.ts](mdc:src/main.ts) - Vue app entry point
- [src/App.vue](mdc:src/App.vue) - Root component with CSS variables and ElConfigProvider
- [src-tauri/src/lib.rs](mdc:src-tauri/src/lib.rs) - Rust backend with Tauri commands

## Directory Structure

### Frontend (`src/`)
- `components/` - Vue components
  - [FloatingWindow.vue](mdc:src/components/FloatingWindow.vue) - Main draggable window
  - [TodoList.vue](mdc:src/components/TodoList.vue) - Todo management component
  - [SettingsModal.vue](mdc:src/components/SettingsModal.vue) - Settings dialog
- `store/` - Pinia stores
  - [app.ts](mdc:src/store/app.ts) - App-wide settings (window, locale, transparency)
  - [todo.ts](mdc:src/store/todo.ts) - Todo items and settings management
- `types/` - TypeScript type definitions
  - [todo.ts](mdc:src/types/todo.ts) - Todo-related interfaces
- `constants/` - Application constants
  - [todo.ts](mdc:src/constants/todo.ts) - Default todo settings
  - [locale.ts](mdc:src/constants/locale.ts) - Element Plus locale configurations
- `utils/` - Utility functions
  - [time.ts](mdc:src/utils/time.ts) - Time-related utilities
  - [color.ts](mdc:src/utils/color.ts) - Color manipulation utilities
  - [message.ts](mdc:src/utils/message.ts) - Message utilities

### Backend (`src-tauri/`)
- [src/lib.rs](mdc:src-tauri/src/lib.rs) - Tauri commands for file I/O
- [tauri.conf.json](mdc:src-tauri/tauri.conf.json) - Tauri configuration

## Data Persistence

- Todos: `data/todos.json`
- Settings: `data/settings.json` 
- App State: `data/app_state.json`
- Archived Todos: `data/archived_todos.json`

## Styling Approach

- Uses CSS variables defined in [App.vue](mdc:src/App.vue) for dynamic styling
- UnoCSS for utility classes
- Element Plus for UI components
- Semi-transparent backgrounds with backdrop-blur for readability